/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UtilPackage;

import BurgerDao.BeveragesDao;
import BurgerDao.BurgersDao;
import modal.Package.Beverages;
import modal.Package.Burgers;
import com.jgoodies.animation.components.AnimatedLabel;
import java.nio.file.attribute.AclEntryType;
import java.util.List;
import javafx.animation.Animation;
import javafx.util.Duration;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Interface.Pizzaconf;
import model.decor.CheeseDecor;
import model.decor.CheeseOptions;
import model.decor.DeliveryOptions;
import model.decor.MeatOptions;
import model.decor.Meatdecor;
import model.decor.TomatoesDecor;
import model.decor.TomatoesOptions;
import model.decor.VegDecor;
import model.decor.VegetablesOptions;
import model.decor.deliveryDecor;
import model.impl.pizzaBase.Large;
import model.impl.pizzaBase.Medium;
import model.impl.pizzaBase.Small;

/**
 *
 * @author tyson
 */
public class BuyBugers extends javax.swing.JFrame {

     BurgersFactory bfact=BurgersFactory.getInstance();
     BurgersDao burgerdao=bfact.registerburger();
     BeveragesDao beveragedao=bfact.registerdrink();
     
     
     int id;
    /**
     * Creates new form BuyBugers
     */
    Animation Ac=null;
    public BuyBugers() {
        initComponents();
        //bdrinks.setModel(new DefaultComboBoxModel(beveragedao.drinksavailable().toArray()));
//        SlideShow();
    }
     
//    public void SlideShow(){
//        
//        new Thread(){
//            
//            int count;
//            
//            public void run(){
//                
//                try{
//                    while(true){
//                        
//                         switch(count){
//                             
//                             case 0:
//                                 Ac.jumpTo(Duration.ZERO);
//                                 break;
//                             
//                         }
//                    }
//                    
//                }catch(Exception ex){
//                    System.out.print(ex);
//                }
//                
//            }
//            
//        }.start();
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField5 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        burgertable = new javax.swing.JTable();
        burgerserial = new javax.swing.JTextField();
        burgername = new javax.swing.JTextField();
        burgertype = new javax.swing.JTextField();
        drinkid = new javax.swing.JTextField();
        updateburger = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        registerburger = new javax.swing.JButton();
        Searchburger = new javax.swing.JButton();
        allburgers = new javax.swing.JButton();
        b2 = new javax.swing.JLabel();
        cheeseoptions = new javax.swing.JComboBox<>();
        meatoptions = new javax.swing.JComboBox<>();
        vegoptions = new javax.swing.JComboBox<>();
        baseprice = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setOpaque(false);
        jPanel1.setLayout(null);

        burgertable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "BurgerSerial", "Burger name", "Components", "Burgertype", "Pricetag", "Drink"
            }
        ));
        jScrollPane1.setViewportView(burgertable);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 280, 560, 100);

        burgerserial.setBackground(new java.awt.Color(240, 240, 240));
        burgerserial.setOpaque(false);
        burgerserial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                burgerserialActionPerformed(evt);
            }
        });
        jPanel1.add(burgerserial);
        burgerserial.setBounds(740, 120, 320, 40);

        burgername.setOpaque(false);
        jPanel1.add(burgername);
        burgername.setBounds(740, 170, 320, 40);

        burgertype.setOpaque(false);
        jPanel1.add(burgertype);
        burgertype.setBounds(740, 270, 320, 40);

        drinkid.setOpaque(false);
        jPanel1.add(drinkid);
        drinkid.setBounds(740, 380, 320, 40);

        updateburger.setBackground(new java.awt.Color(255, 255, 255));
        updateburger.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        updateburger.setForeground(new java.awt.Color(51, 51, 51));
        updateburger.setText("Update");
        updateburger.setOpaque(false);
        updateburger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateburgerActionPerformed(evt);
            }
        });
        jPanel1.add(updateburger);
        updateburger.setBounds(860, 440, 90, 40);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Serial Number");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(620, 130, 100, 20);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Drink Choice");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(620, 380, 90, 30);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Burger name");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(620, 180, 100, 30);

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Options");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(620, 230, 80, 30);

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Burgertype");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(620, 280, 140, 30);

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("BasePrice");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(620, 330, 130, 30);

        jPanel2.setBackground(new java.awt.Color(255, 153, 102));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Burger/images/fast-food.png"))); // NOI18N

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Burger/images/cancel.png"))); // NOI18N
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel8MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(528, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(466, 466, 466)
                .addComponent(jLabel8)
                .addGap(18, 18, 18))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(24, 24, 24))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 1100, 90);

        registerburger.setBackground(new java.awt.Color(255, 255, 255));
        registerburger.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        registerburger.setForeground(new java.awt.Color(51, 51, 51));
        registerburger.setText("Register");
        registerburger.setOpaque(false);
        registerburger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerburgerActionPerformed(evt);
            }
        });
        jPanel1.add(registerburger);
        registerburger.setBounds(740, 440, 90, 40);

        Searchburger.setBackground(new java.awt.Color(255, 255, 255));
        Searchburger.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        Searchburger.setForeground(new java.awt.Color(51, 51, 51));
        Searchburger.setText("Search");
        Searchburger.setOpaque(false);
        Searchburger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchburgerActionPerformed(evt);
            }
        });
        jPanel1.add(Searchburger);
        Searchburger.setBounds(970, 440, 90, 40);

        allburgers.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        allburgers.setForeground(new java.awt.Color(51, 51, 51));
        allburgers.setText("All Burgers");
        allburgers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allburgersActionPerformed(evt);
            }
        });
        jPanel1.add(allburgers);
        allburgers.setBounds(220, 400, 150, 40);

        b2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        b2.setForeground(new java.awt.Color(255, 153, 51));
        b2.setIcon(new javax.swing.ImageIcon("C:\\Users\\tyson\\Pictures\\Burgers\\1.jfif")); // NOI18N
        b2.setOpaque(true);
        jPanel1.add(b2);
        b2.setBounds(0, 90, 590, 410);

        cheeseoptions.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        cheeseoptions.setForeground(new java.awt.Color(102, 102, 102));
        cheeseoptions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NOCHEESE", "REGULAR", "EXTRACHEESE" }));
        jPanel1.add(cheeseoptions);
        cheeseoptions.setBounds(740, 220, 100, 40);

        meatoptions.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        meatoptions.setForeground(new java.awt.Color(102, 102, 102));
        meatoptions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BEEF", "CHICKEN", "FISH", "NO_CHOICE" }));
        jPanel1.add(meatoptions);
        meatoptions.setBounds(850, 220, 100, 40);

        vegoptions.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        vegoptions.setForeground(new java.awt.Color(102, 102, 102));
        vegoptions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NO_CHOICE", "MUSHROOM", "ONION", "BLACKOLIVES", "PINEAPLE" }));
        jPanel1.add(vegoptions);
        vegoptions.setBounds(960, 220, 100, 40);

        baseprice.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        baseprice.setForeground(new java.awt.Color(255, 153, 51));
        baseprice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel1.add(baseprice);
        baseprice.setBounds(740, 320, 320, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1098, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1098, 506));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void burgerserialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_burgerserialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_burgerserialActionPerformed
//    private void Showdrinks(List<Beverages> bev){
//        
//        DefaultTableModel drink = (DefaultTableModel) drinkstable.getModel();
//        
//        while(drink.getRowCount()>0){
//            drink.removeRow(0);
//        }
//        for(int i=0;i<bev.size();i++){
//            
//            Object[] obj={bev.get(i).getSerialnumber(),bev.get(i).getBeveragename(),bev.get(i).getFlavourtype(),bev.get(i).getPricetag()};
//            drink.addRow(obj);
//        }
//    }
    private void Showbread(Burgers bu){
        
        DefaultTableModel bread=(DefaultTableModel) burgertable.getModel();
        
        while(bread.getRowCount()>0){
            bread.removeRow(0);
        }
        Object[] obj={bu.getSerialnumber(),bu.getBurgername(),bu.getComponents(),bu.getBurgertype(),bu.getPricetag(),bu.getDrinks().getBeveragename()};
        bread.addRow(obj);
        
    }
     private void Allbread(List<Burgers> bu){
        //Burgers bu=new Burgers();
        DefaultTableModel bread=(DefaultTableModel) burgertable.getModel();
        
        while(bread.getRowCount()>0){
            bread.removeRow(0);
        }
        for(int i=0;i<bu.size();i++){
        Object[] obj={bu.get(i).getSerialnumber(),bu.get(i).getBurgername(),bu.get(i).getComponents(),bu.get(i).getBurgertype(),bu.get(i).getPricetag(),bu.get(i).getDrinks().getBeveragename()};
        bread.addRow(obj);
        }
    }
    private void jLabel8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MousePressed
        TheBurgerHouse form= new TheBurgerHouse();
        form.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel8MousePressed

    private void updateburgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateburgerActionPerformed
        Burgers burger=new Burgers();
        Pizzaconf largeP=new Large();
        Pizzaconf mediumP=new Medium();
        Pizzaconf smallP=new Small();
        
        String cheeseoption=(String)cheeseoptions.getSelectedItem();
        String meatoption=(String) meatoptions.getSelectedItem();
        String vegoption=(String) vegoptions.getSelectedItem();
       
        
         Meatdecor meatmedium=new Meatdecor(mediumP, MeatOptions.valueOf((String)meatoptions.getSelectedItem()));
         CheeseDecor cheesemedium=new CheeseDecor(meatmedium, CheeseOptions.valueOf((String)cheeseoptions.getSelectedItem()));
         VegDecor vegmedium=new VegDecor(cheesemedium, VegetablesOptions.valueOf((String)vegoptions.getSelectedItem()));
         
        
        Pizzaconf vegpizza=vegmedium;
        vegpizza.setname();
        
        System.out.println("-----------------Total-------------------------");
        double total=0;
        total=total+vegpizza.setBasePrice();
        total=total-2000;
 
        baseprice.setText(String.valueOf(total)+"RWF");
        
        
        burger.setSerialnumber(Integer.valueOf(burgerserial.getText()));
        burger.setBurgername(burgername.getText());
        burger.setComponents(cheeseoption+" "+meatoption+" "+vegoption);
        burger.setBurgertype(burgertype.getText());
        burger.setPricetag(String.valueOf(total));
       
        Beverages beverage=beveragedao.drinksavailable(Integer.valueOf(drinkid.getText()));
        System.out.println(beverage);
        //burger.setDrinks((Beverages) bdrinks.getSelectedItem());
        burger.setDrinks(beverage);
        
        System.out.println(burger);
        Showbread(burger);
        burgerdao.Update(burger);
        
        JOptionPane.showMessageDialog(null, "Burger Updated Successfully!");
    }//GEN-LAST:event_updateburgerActionPerformed

    private void registerburgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerburgerActionPerformed
        Burgers burger=new Burgers();
        Pizzaconf largeP=new Large();
        Pizzaconf mediumP=new Medium();
        Pizzaconf smallP=new Small();
        
        String cheeseoption=(String)cheeseoptions.getSelectedItem();
        String meatoption=(String) meatoptions.getSelectedItem();
        String vegoption=(String) vegoptions.getSelectedItem();
       
        
         Meatdecor meatmedium=new Meatdecor(mediumP, MeatOptions.valueOf((String)meatoptions.getSelectedItem()));
         CheeseDecor cheesemedium=new CheeseDecor(meatmedium, CheeseOptions.valueOf((String)cheeseoptions.getSelectedItem()));
         VegDecor vegmedium=new VegDecor(cheesemedium, VegetablesOptions.valueOf((String)vegoptions.getSelectedItem()));
         
        
        Pizzaconf vegpizza=vegmedium;
        vegpizza.setname();
        
        System.out.println("-----------------Total-------------------------");
        double total=0;
        total=total+vegpizza.setBasePrice();
        total=total-2000;
 
        baseprice.setText(String.valueOf(total)+"RWF");
        
        
        burger.setSerialnumber(Integer.valueOf(burgerserial.getText()));
        burger.setBurgername(burgername.getText());
        burger.setComponents(cheeseoption+" "+meatoption+" "+vegoption);
        burger.setBurgertype(burgertype.getText());
        burger.setPricetag(String.valueOf(total));
       
        Beverages beverage=beveragedao.drinksavailable(Integer.valueOf(drinkid.getText()));
        System.out.println(beverage);
        //burger.setDrinks((Beverages) bdrinks.getSelectedItem());
        burger.setDrinks(beverage);
        
        System.out.println(burger);
        Showbread(burger);
        
        burgerdao.create(burger);
        JOptionPane.showMessageDialog(null, "Burger Saved Successfully!");
    }//GEN-LAST:event_registerburgerActionPerformed

    private void SearchburgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchburgerActionPerformed
        try{
            Burgers b=burgerdao.availableburgers(Integer.valueOf(burgerserial.getText()));
            b.setDrinks(beveragedao.drinksavailable(Integer.valueOf(drinkid.getText())));
            System.out.println(b);
            Showbread(b);
        }catch(Exception e){
            System.err.println(e);
        }
        JOptionPane.showMessageDialog(null, "Burger Found!");
    }//GEN-LAST:event_SearchburgerActionPerformed

    private void allburgersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allburgersActionPerformed
        //Allbread(bu);
    }//GEN-LAST:event_allburgersActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuyBugers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuyBugers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuyBugers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuyBugers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuyBugers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Searchburger;
    private javax.swing.JButton allburgers;
    private javax.swing.JLabel b2;
    private javax.swing.JLabel baseprice;
    private javax.swing.JTextField burgername;
    private javax.swing.JTextField burgerserial;
    private javax.swing.JTable burgertable;
    private javax.swing.JTextField burgertype;
    private javax.swing.JComboBox<String> cheeseoptions;
    private javax.swing.JTextField drinkid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JComboBox<String> meatoptions;
    private javax.swing.JButton registerburger;
    private javax.swing.JButton updateburger;
    private javax.swing.JComboBox<String> vegoptions;
    // End of variables declaration//GEN-END:variables
}
